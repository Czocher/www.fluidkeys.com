<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Fluidkeys Blog</title>
  <updated>2018-10-26T00:00:00+00:00</updated>
  <author>
    <name>Fluidkeys</name>
  </author>
  <entry>
    <title>Week 12: Fluidkeys v0.2 and the OpenPGP Email summit</title>
    <link rel="alternate" href="https://www.fluidkeys.com/weeknotes/week-12/"/>
    <id>https://www.fluidkeys.com/weeknotes/week-12/</id>
    <published>2018-10-26T00:00:00+00:00</published>
    <updated>2018-10-30T14:41:13+00:00</updated>
    <author>
      <name>Paul Fawkesley</name>
    </author>
    <content type="html">&lt;p&gt;&lt;em&gt;Recap&lt;/em&gt;: we&amp;#39;re building a product that makes it easy for software teams to
implement great security across their organisations. We’re currently coding a
command line application that&amp;#39;ll be a foundation for further functionality.&lt;/p&gt;

&lt;h2&gt;This week&lt;/h2&gt;

&lt;p&gt;This week has been incredible and exhausting. At the weekend I was at the
 &lt;a href="https://blog.mailfence.com/openpgp-email-summit/"&gt;OpenPGP Email Summit&lt;/a&gt; in
Brussels, and right now I&amp;#39;m on my way to MozFest in London.&lt;/p&gt;

&lt;p&gt;Midweek, I joined Ian in Sheffield where we hit a major milestone: we released Fluidkeys v0.2!&lt;/p&gt;

&lt;h2&gt;Ian led a UI crit&lt;/h2&gt;

&lt;p&gt;In Wednesday Ian pulled us through an extremely thorough review of &lt;em&gt;every&lt;/em&gt; bit of content in Fluidkeys.&lt;/p&gt;

&lt;p&gt;Looking at everything in one place with fresh eyes was illuminating. We re-wrote loads of things and created a collection of design patterns and nomenclature. Things like, Fluidkeys &lt;em&gt;makes a backup&lt;/em&gt; rather than Fluidkeys &lt;em&gt;backs up&lt;/em&gt;. It&amp;#39;s amazing how many different ways we were talking about the same things. After the crit Fluidkeys is feeling a lot more consistent and clear.&lt;/p&gt;

&lt;h2&gt;We released v0.2&lt;/h2&gt;

&lt;p&gt;It&amp;#39;s been a long time coming, but we did it. This version of Fluidkeys can create, import and automatically maintain and rotate PGP keys.&lt;/p&gt;

&lt;p&gt;I&amp;#39;m delighted with it. Take a look at the &lt;a href="/blog/release-0-2/"&gt;the release notes&lt;/a&gt;, including a very cool terminal animation Ian knocked up.&lt;/p&gt;

&lt;h2&gt;Observations from the OpenPGP summit&lt;/h2&gt;

&lt;p&gt;It was an absolute pleasure to catch up with others from the community in Brussels. It was non-stop thinking, chatting, learning, hacking and socialising. It was also an incredibly warm and friendly scene which is lovely to see.&lt;/p&gt;

&lt;p&gt;While it&amp;#39;s still fresh, I&amp;#39;m going to use this weeknote to jot down some thoughts from the summit.&lt;/p&gt;

&lt;h2&gt;Usability is top of the agenda&lt;/h2&gt;

&lt;p&gt;My favourite quote from the weekend was:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;The threat model for email encryption is that no-one uses it.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;It&amp;#39;s absolutely clear that most people acknowledge that past approaches have failed: only a few million people worldwide use email encryption.&lt;/p&gt;

&lt;p&gt;The old idea that you need to deeply understand cryptography in order to use has been scrapped. People are thinking hard how to hide and automate everything.&lt;/p&gt;

&lt;p&gt;This is &lt;em&gt;great news.&lt;/em&gt;&lt;/p&gt;

&lt;h2&gt;Autocrypt looks more promising than ever&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://autocrypt.org/"&gt;Autocrypt&lt;/a&gt; is a set of guidelines that describes how mail programmes can &lt;em&gt;automatically&lt;/em&gt; negotiate encryption with other email contacts.&lt;/p&gt;

&lt;p&gt;It&amp;#39;s mind-blowing to see two Autocrypt-enabled mail clients transparently discover keys and start encrypting. This is exactly how it should be.&lt;/p&gt;

&lt;p&gt;Another great quote from Autocrypt&amp;#39;s design principles:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Don&amp;#39;t talk about keys. Ever.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Yep.&lt;/p&gt;

&lt;h2&gt;Automatic key discovery is where it&amp;#39;s at&lt;/h2&gt;

&lt;p&gt;Key discovery means finding a public key from an email address.&lt;/p&gt;

&lt;p&gt;Autocrypt achieves this by embedding keys in the header of outgoing emails.&lt;/p&gt;

&lt;p&gt;Additional discovery mechanisms are emerging. &lt;a href="https://tools.ietf.org/html/draft-koch-openpgp-webkey-service-06"&gt;Web Key Discovery (WKD)&lt;/a&gt; uses the &lt;code&gt;/.well-known/openpgpkey&lt;/code&gt; directory over HTTPS. If a client has an email address, they map it to a specific URL, and request that URL for a key.&lt;/p&gt;

&lt;p&gt;We &lt;a href="https://github.com/fluidkeys/web-key-discovery"&gt;implemented this today&lt;/a&gt; using a Github repository as the backend.&lt;/p&gt;

&lt;p&gt;WKD has some issues and the documentation is challenging, but it&amp;#39;s a great concept. We sent out our release note with a &lt;code&gt;reply-to&lt;/code&gt; header pointing to &lt;code&gt;hello@fluidkeys.com&lt;/code&gt;. Any WKD-enabled mail client will automatically find the key and use it to encrypt to us.&lt;/p&gt;

&lt;p&gt;(The git-repo concept won&amp;#39;t scale since we&amp;#39;re rotating keys every month. Fluidkeys will publish to WKD automatically, sooner or later...)&lt;/p&gt;

&lt;h2&gt;OpenPGP is finally bigger than GnuPG&lt;/h2&gt;

&lt;p&gt;I found it great to see the OpenPGP standard actually being used &lt;em&gt;as a standard&lt;/em&gt;, with multiple implementations talking the same language.&lt;/p&gt;

&lt;p&gt;It used to feel like OpenPGP meant GnuPG. That meant applications bundling a binary of gpg then calling it via its command-line interface.&lt;/p&gt;

&lt;p&gt;There&amp;#39;s still plenty of that, but some decent first-class implementations have emerged too:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="#"&gt;OpenPGP.js&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://sequoia-pgp.org/"&gt;Sequoia&lt;/a&gt;, a new Rust implemtation&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/golang/crypto/"&gt;golang/crypto&lt;/a&gt; (ProtonMail maintain a &lt;a href="https://github.com/protonmail/crypto"&gt;significant fork&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Delta chat is my favourite new app&lt;/h2&gt;

&lt;p&gt;&lt;a href="#"&gt;Delta chat&lt;/a&gt; looks just like your favorite messaging app, but it &lt;em&gt;sends messages via email&lt;/em&gt;. I didn&amp;#39;t get why this was a big deal initially until I started using it.&lt;/p&gt;

&lt;p&gt;I find it strangely delightful that everything&amp;#39;s an email. There&amp;#39;s no centralised service snooping on my contacts. It&amp;#39;s difficult for censors to block it (other than blocking email itself, with the collateral damage that involves)&lt;/p&gt;

&lt;p&gt;Delta chat has a cunning (experimental?) feature where you can scan a special QR code, and somehow you get a throwaway email account, and the app seamlessly logs in to it. I think it does some key exchange, and perhaps joins a chat group too (not sure on the detail here).&lt;/p&gt;

&lt;p&gt;I can imagine this being useful for events like the &lt;a href="https://internetfreedomfestival.org"&gt;Internet Freedom Festival.&lt;/a&gt; Participants could scan a barcode on the door and have a super-secure, anonymous chat group while they&amp;#39;re at the event. Afterwards, the accounts could be thrown away.&lt;/p&gt;

&lt;h2&gt;The keyserver network needs some love&lt;/h2&gt;

&lt;p&gt;The public keyserver network is run by a group of volunteers mostly using software called &lt;a href="https://bitbucket.org/skskeyserver/sks-keyserver"&gt;SKS&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Keyservers are used to fetch updates for keys, for example new subkeys and revocation signatures.&lt;/p&gt;

&lt;p&gt;(They&amp;#39;re also widely used for key &lt;em&gt;discovery&lt;/em&gt; from an email address, but this is less than ideal since there&amp;#39;s no validation of email addresses.)&lt;/p&gt;

&lt;p&gt;In recent months the cracks began to show when a researcher uploaded a specially crafted key which broke many SKS instances.&lt;/p&gt;

&lt;p&gt;SKS is written in the obscure language OCaml, using the obscure source control system mercurial, and an extremely obscure key reconciliation protocol descibed in pages of mathspeak.&lt;/p&gt;

&lt;p&gt;All this obscurity means no-one is confident to make any major changes to SKS. And so it remains broken.&lt;/p&gt;

&lt;p&gt;The result to end-users is that key lookups can hang and time-out, giving an overall bad impression of the software and email encryption in general.&lt;/p&gt;

&lt;h2&gt;Most of us want to simplify the standard&lt;/h2&gt;

&lt;p&gt;On the second day of the summit a number of us got together to discuss how to slash the standard.&lt;/p&gt;

&lt;p&gt;The standard is enormous. There are multiple ways of doing the same thing and way too many choices of algorithms. Why do we need AES192 when we&amp;#39;ve got AES256? This bloat makes it difficult for new people to enter the community and it&amp;#39;s extremely daunting to build a new implementation.&lt;/p&gt;

&lt;p&gt;A number of us agreed a strategy for dropping the cruft over time. We started defining what &amp;quot;simplified openpgp&amp;quot; would look like, and we&amp;#39;ll commit to &lt;em&gt;only&lt;/em&gt; outputting data within that subset. Over time, we&amp;#39;ll be able to measure how many times obsolete features are used and make an informed decision when to remove it altogether.&lt;/p&gt;

&lt;p&gt;The outstanding issue with dropping obsolute features &lt;em&gt;completely&lt;/em&gt; is being able to decrypt old email archives. &lt;em&gt;Someone&lt;/em&gt; has to maintain software that can open those old formats. But for many apps like Delta Chat, I don&amp;#39;t think there&amp;#39;ll be any point supporting obsolete features.&lt;/p&gt;

&lt;p&gt;Wow, that was quite a braindump. Hopefully I&amp;#39;ll be able to sleep better now that&amp;#39;s all out :)&lt;/p&gt;

&lt;p&gt;Thanks for reading!&lt;/p&gt;

&lt;p&gt;Paul&lt;/p&gt;

&lt;p&gt;&lt;em&gt;All&lt;/em&gt; feedback is welcome, pop us an email to
&lt;a href="mailto:hello@fluidkeys.com"&gt;hello@fluidkeys.com*&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;bonus points if it comes encrypted&lt;/em&gt;&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Announcing Fluidkeys v0.2!</title>
    <link rel="alternate" href="https://www.fluidkeys.com/blog/release-0-2/"/>
    <id>https://www.fluidkeys.com/blog/release-0-2/</id>
    <published>2018-10-25T00:00:00+00:00</published>
    <updated>2018-10-30T14:40:16+00:00</updated>
    <author>
      <name>Paul Fawkesley &amp; Ian Drysdale</name>
    </author>
    <content type="html">&lt;p&gt;Today we&amp;#39;re excited to announce Fluidkeys 0.2 😄&lt;/p&gt;

&lt;p&gt;We&amp;#39;re building Fluidkeys to help teams protect themselves with strong encryption. For now, Fluidkeys is aimed at software development teams who are comfortable using the command line.&lt;/p&gt;

&lt;p&gt;&lt;img src="../../images/release-0-2-0-animation.svg" alt="Animation of the command line interface for Fluidkeys" /&gt;&lt;/p&gt;

&lt;p&gt;In these first releases we&amp;#39;re building a foundation for getting team members started with PGP. We&amp;#39;ve tried hard to make it extremely simple and automated by default.&lt;/p&gt;

&lt;p&gt;With this foundation in place, we&amp;#39;ll be able to start building more directly useful features. We need your feedback: more on that later.&lt;/p&gt;

&lt;p&gt;If you&amp;#39;re keen to get started, head to &lt;a href="https://download.fluidkeys.com"&gt;download.fluidkeys.com&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;Fluidkeys v0.2 lets you create, import, maintain and rotate keys&lt;/h2&gt;

&lt;h3&gt;Create a new best practice key&lt;/h3&gt;

&lt;p&gt;Fluidkeys can create a best-practice OpenPGP key for you, giving you a strong,
memorable password and importing it into &lt;code&gt;gpg&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Fluidkeys doesn&amp;#39;t ask you any difficult questions. It focuses on making a good key that you can use as soon as possible.&lt;/p&gt;

&lt;h3&gt;Import an existing key from gpg&lt;/h3&gt;

&lt;p&gt;If you&amp;#39;ve already got a key in &lt;code&gt;gpg&lt;/code&gt;, you can connect that to Fluidkeys.&lt;/p&gt;

&lt;p&gt;Lots of keys out there use outdated preferences and old cryptography. When you connect a key to Fluidkeys, it immediately identifies a number of issues that can be fixed.&lt;/p&gt;

&lt;h3&gt;Maintain and rotate your keys&lt;/h3&gt;

&lt;p&gt;This is where we&amp;#39;ve spent the most time, and I&amp;#39;m confident we&amp;#39;re laying strong groundwork.&lt;/p&gt;

&lt;p&gt;Keys aren&amp;#39;t static - things change over time. Ciphers are broken and new ones are introduced.&lt;/p&gt;

&lt;p&gt;Keys shouldn&amp;#39;t be used forever: they should be rotated regularly to limit the damage caused by a compromise.&lt;/p&gt;

&lt;p&gt;Fluidkeys looks for issues with your key and offers to fix them. So far, it identifies weak signature hashes, algorithm preferences which could be stronger, and expiry dates.&lt;/p&gt;

&lt;p&gt;As well as fixing &lt;em&gt;issues&lt;/em&gt;, Fluidkeys also starts rotating your key. It tries to create a new encryption subkey every 30 days and expire the old one. This ensures the new subkey is used for encrypting new data, while keeping the old one around for decrypting old data.&lt;/p&gt;

&lt;p&gt;Similarly, Fluidkeys sets the expiry on the primary key too, extending it by 30 days on the first of each month.&lt;/p&gt;

&lt;p&gt;Thanks to everyone who responded to our request for feedback on rotation 😊&lt;/p&gt;

&lt;h3&gt;Fluidkeys automates by default&lt;/h3&gt;

&lt;p&gt;Several people urged us to be bolder with automation, and we were convinced.&lt;/p&gt;

&lt;p&gt;As a design principle, Fluidkeys defaults to automating everything. People shouldn&amp;#39;t have to answer questions, or care about maintaining their key.&lt;/p&gt;

&lt;p&gt;If you create a brand new key with Fluidkeys, by default it&amp;#39;ll save the (generated) password in your system keyring and configure &lt;code&gt;cron&lt;/code&gt; to run itself periodically.&lt;/p&gt;

&lt;p&gt;If you &lt;em&gt;import&lt;/em&gt; a key from &lt;code&gt;gpg&lt;/code&gt;, we&amp;#39;re more cautious, but you&amp;#39;ll be prompted if you&amp;#39;d like to save your password and enable automation.&lt;/p&gt;

&lt;p&gt;Fluidkeys adds a line like this to your &lt;code&gt;crontab&lt;/code&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;@hourly fk key maintain automatic --cron-output
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;We specify hourly because we don&amp;#39;t know when your machine will be on, though usually Fluidkeys will exit quickly with nothing to do.&lt;/p&gt;

&lt;h2&gt;Things you should be aware of&lt;/h2&gt;

&lt;p&gt;We hope you&amp;#39;ll start using Fluidkeys and it won&amp;#39;t have any surprises. That said, there are a couple of things we feel you should know:&lt;/p&gt;

&lt;h3&gt;Fluidkeys stores keys in gpg&lt;/h3&gt;

&lt;p&gt;Currently Fluidkeys doesn&amp;#39;t implement its own storage of keys: it pushes them into &lt;code&gt;gpg&lt;/code&gt;. If you delete a key from &lt;code&gt;gpg&lt;/code&gt;, there&amp;#39;s no copy in Fluidkeys. We don&amp;#39;t modify the &lt;code&gt;GNUPGHOME&lt;/code&gt; directory: we push and pull straight from your default &lt;code&gt;gpg2&lt;/code&gt; installation.&lt;/p&gt;

&lt;p&gt;Future versions of Fluidkeys will probably implement their own key store.&lt;/p&gt;

&lt;h3&gt;Fluidkeys doesn&amp;#39;t upload your key anywhere&lt;/h3&gt;

&lt;p&gt;Currently, when you create a key or update an existing one, the key doesn&amp;#39;t go anywhere except &lt;code&gt;gpg&lt;/code&gt;. We don&amp;#39;t push to the public keyserver network.&lt;/p&gt;

&lt;p&gt;This means Fluidkeys rotates your key, but there&amp;#39;s no mechanism to synchronise it to other team members.&lt;/p&gt;

&lt;p&gt;We&amp;#39;re still working out what to do about this (a lot of the OpenPGP community are thinking about this too).&lt;/p&gt;

&lt;p&gt;In the meantime, you could configure &lt;code&gt;gpg&lt;/code&gt; to push your key to the keyservers.&lt;/p&gt;

&lt;p&gt;Edit your crontab by running &lt;code&gt;crontab -e&lt;/code&gt; and add this line:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;@daily gpg --keyserver pool.sks-keyservers.net --send-key &amp;lt;email address&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;h3&gt;Fluidkeys stores your password in the system login keychain&lt;/h3&gt;

&lt;p&gt;For &lt;em&gt;new&lt;/em&gt; keys Fluidkeys stores the password automatically. We feel OK about doing this without asking since the password is brand new.&lt;/p&gt;

&lt;p&gt;For &lt;em&gt;imported&lt;/em&gt; keys, we only store the password after asking you.&lt;/p&gt;

&lt;p&gt;If you&amp;#39;d like the see how the keys are stored,&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;on macOS, open Keychain Access&lt;/li&gt;
&lt;li&gt;on GNOME, open &lt;code&gt;seahorse&lt;/code&gt; or anything else using &lt;code&gt;libsecretservice&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;On macOS we can&amp;#39;t yet automate keychain access&lt;/h3&gt;

&lt;p&gt;On macOS the Keychain will prompt you every time Fluidkeys tries to access your stored password.&lt;/p&gt;

&lt;p&gt;Clicking &lt;em&gt;Always allow&lt;/em&gt; works until the next time Fluidkeys is run.&lt;/p&gt;

&lt;p&gt;In order for Fluidkeys to have prompt-free access to the keychain, we need to sign up to the Apple Developer Programme. We plan to do this but it&amp;#39;s not a 5 minute job, so we&amp;#39;re deferring it for now.&lt;/p&gt;

&lt;p&gt;In the meantime, we&amp;#39;ve built a workaround where you can store passwords in a text file.&lt;/p&gt;

&lt;p&gt;To use the password file add this line to your &lt;code&gt;~/.zshrc&lt;/code&gt; file:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;export FLUIDKEYS_PASSWORDS_TOML_FILE=&amp;quot;$HOME/.fluidkeys_passwords.toml&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;And add these lines to that file:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# Fluidkeys password file.
[pgpkeys]

    # replace AAAA... with your key fingerprint which you can find by running:
    # $ gpg --list-secret-keys --fingerprint

    [pgpkeys.&amp;quot;AAAA1111AAAA1111AAAA1111AAAA1111AAAA1111&amp;quot;]
    password = &amp;quot;the quick brown fox&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;h2&gt;Download Fluidkeys v0.2&lt;/h2&gt;

&lt;p&gt;On to business: head on over to &lt;a href="https://download.fluidkeys.com"&gt;download.fluidkeys.com&lt;/a&gt; to get started.&lt;/p&gt;

&lt;pre class="terminal"&gt;
&lt;span class="prompt"&gt;$&lt;/span&gt; fk --help
Fluidkeys 0.2.1

Configuration file: /home/paul/.config/fluidkeys/config.toml

Usage:
        fk key create
        fk key from-gpg
        fk key list
        fk key maintain [--dry-run]
        fk key maintain automatic [--cron-output]

Options:
        -h --help         Show this screen
           --dry-run      Don't change anything: only output what would happen
           --cron-output  Only print output on errors
&lt;/pre&gt;

&lt;h2&gt;What shall we do next?&lt;/h2&gt;

&lt;p&gt;What would you like to see in v0.3?&lt;/p&gt;

&lt;p&gt;Here are some features we&amp;#39;re thinking about:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Send large files between team members quickly and securely&lt;/li&gt;
&lt;li&gt;Send secret snippets between team members&lt;/li&gt;
&lt;li&gt;Turn on code signing and validation for all team members&lt;/li&gt;
&lt;li&gt;Configure a mail program for encrypted email&lt;/li&gt;
&lt;li&gt;Archive data with PGP encryption&lt;/li&gt;
&lt;li&gt;Send encrypted emails to your users from your SaaS product&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;We&amp;#39;re particularly interested in hearing from:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;people working in a professional development team&lt;/li&gt;
&lt;li&gt;with problems that cause the team pain&lt;/li&gt;
&lt;li&gt;with budget to spend on solving those problems&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Thanks for reading. You rock.&lt;/p&gt;

&lt;p&gt;— Paul &amp;amp; Ian&lt;/p&gt;

&lt;p&gt;We love hearing from you. &lt;a href="mailto:hello@fluidkeys.com"&gt;Email us now&lt;/a&gt;&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Week 11, Automation 🤖</title>
    <link rel="alternate" href="https://www.fluidkeys.com/weeknotes/week-11/"/>
    <id>https://www.fluidkeys.com/weeknotes/week-11/</id>
    <published>2018-10-19T00:00:00+00:00</published>
    <updated>2018-10-30T14:40:16+00:00</updated>
    <author>
      <name>Ian Drysdale</name>
    </author>
    <content type="html">&lt;p&gt;&lt;em&gt;Recap&lt;/em&gt;: we&amp;#39;re building a tool that makes it easy for software teams to
implement great security across their organisations. We’re currently coding a
command line application that&amp;#39;ll be a foundation for further functionality.&lt;/p&gt;

&lt;h2&gt;This week&lt;/h2&gt;

&lt;p&gt;Paul’s off to the &lt;a href="https://blog.mailfence.com/openpgp-email-summit/"&gt;OpenPGP Email Summit&lt;/a&gt; 
in Brussels this weekend and racing to get his plane! ✈️ Sadly for you, this
means you’ve got me on week notes again! I’ll keep it short.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;This week has all been about getting Fluidkeys to do things automatically for you&lt;/em&gt; 🤖&lt;/p&gt;

&lt;p&gt;We’ve had key rotation working for a couple of weeks now, but each time you did
it the application would need to prompt you. This was either to check that 
you were happy with what it was about to do, or for a password
(so as to be able to edit your keys).&lt;/p&gt;

&lt;p&gt;All this is now a thing of the past. &lt;/p&gt;

&lt;p&gt;Fluidkeys now allows you to store your key passwords safely in your operating
system’s keychain. You specify which of your keys you want to rotate 
automatically and it’ll schedule a &lt;a href="https://en.wikipedia.org/wiki/Cron"&gt;Cron&lt;/a&gt;
task and take care of the rest! 🏖&lt;/p&gt;

&lt;p&gt;Hmmmm, how do I show the thing? How about the &lt;code&gt;config.toml&lt;/code&gt; file?&lt;/p&gt;

&lt;pre class="terminal"&gt;
&lt;span class="comment"&gt;# Fluidkeys configuration file for 'fk' command&lt;/span&gt;
run_from_cron = true

[pgpkeys]
  [pgpkeys.0CE71C96A2E08215ECD9F85C5FC2686F65FA1ABC]
    store_password = true
    rotate_automatically = true
&lt;/pre&gt;

&lt;p&gt;0.2 should be out next week and we’ll be looking for testers!&lt;/p&gt;

&lt;p&gt;See you then!&lt;/p&gt;

&lt;p&gt;Ian&lt;/p&gt;

&lt;p&gt;&lt;em&gt;All&lt;/em&gt; feedback is welcome, pop us an email to
&lt;a href="mailto:hello@fluidkeys.com"&gt;hello@fluidkeys.com&lt;/a&gt;&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Week 10, We put on a Digital Self Defence class!</title>
    <link rel="alternate" href="https://www.fluidkeys.com/weeknotes/week-10/"/>
    <id>https://www.fluidkeys.com/weeknotes/week-10/</id>
    <published>2018-10-12T00:00:00+00:00</published>
    <updated>2018-10-30T14:40:16+00:00</updated>
    <author>
      <name>Ian Drysdale</name>
    </author>
    <content type="html">&lt;p&gt;&lt;em&gt;Recap&lt;/em&gt;: we&amp;#39;re building a tool that makes it easy for software teams to implement great security across their organisations. We’re currently coding a command line application that&amp;#39;ll be a foundation for further functionality.&lt;/p&gt;

&lt;h1&gt;This week&lt;/h1&gt;

&lt;p&gt;I&amp;#39;ve been on the road a bit this week, across to Liverpool to see Paul, then down to London to meet a few folk and get feedback on what we&amp;#39;re up to. Thank you &lt;a href="https://bethnalgreenventures.com"&gt;Bethnal Green Ventures&lt;/a&gt; for letting me work from your base yesterday!&lt;/p&gt;

&lt;h2&gt;We put on a Digital Self Defence class&lt;/h2&gt;

&lt;p&gt;On Tuesday evening Paul and I put on a free &lt;em&gt;digital self defence class&lt;/em&gt;. We wanted to teach people some moves that could help them counter Facebook’s pervasive tracking.&lt;/p&gt;

&lt;p&gt;We made up three exercises that showed people how Facebook track you across the whole of the web, know how you spend your money, and know about &lt;em&gt;all&lt;/em&gt; your relationships.&lt;/p&gt;

&lt;p&gt;We also made a &lt;a href="https://docs.google.com/presentation/d/1wEVZ_TKKyXFESBtNd2yKJbl8ydPedZG15ytcPzvNDrA"&gt;deck of six cards, each with a move you could use against Facebook&lt;/a&gt;. They encourage you to do stuff like &lt;em&gt;mix up your email address&lt;/em&gt; or &lt;em&gt;block browser tracking&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;It was a lovely evening with lots of interesting chat, as you might imagine. Thank you Lisa for helping run it with us! In respect of people&amp;#39;s privacy, we didn&amp;#39;t take photos, but here&amp;#39;s one of the prototype cards:&lt;/p&gt;

&lt;p&gt;&lt;img src="../../images/2018-10-12-facebook-self-defence-cards.jpg" alt="Three of the self defence cards" /&gt;&lt;/p&gt;

&lt;h2&gt;More work on Fluidkeys&lt;/h2&gt;

&lt;p&gt;Amidst all that fun, we&amp;#39;ve been continuing to beaver away trying to get towards our 0.2 release of Fluidkeys. This&amp;#39;ll allow you to rotate your keys, and improve their preferences.&lt;/p&gt;

&lt;p&gt;We&amp;#39;ll have more to show you on where we&amp;#39;ve got to with that next week.&lt;/p&gt;

&lt;p&gt;Until then, have a lovely weekend.&lt;/p&gt;

&lt;p&gt;Ian&lt;/p&gt;

&lt;p&gt;&lt;em&gt;All&lt;/em&gt; feedback is welcome, pop us an email to &lt;a href="mailto:hello@fluidkeys.com"&gt;hello@fluidkeys.com&lt;/a&gt;&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Week 9, Fixing existing keys</title>
    <link rel="alternate" href="https://www.fluidkeys.com/weeknotes/week-9/"/>
    <id>https://www.fluidkeys.com/weeknotes/week-9/</id>
    <published>2018-10-05T00:00:00+00:00</published>
    <updated>2018-10-30T14:40:16+00:00</updated>
    <author>
      <name>Paul Fawkesley</name>
    </author>
    <content type="html">&lt;p&gt;This week I&amp;#39;ve been on my own, spending some quiet time with my head in the OpenPGP spec.&lt;/p&gt;

&lt;h2&gt;Golang crypto/openpgp makes keys without preferences&lt;/h2&gt;

&lt;p&gt;At the start of the week we realised that there&amp;#39;s a subtle (recoverable) problem with the keys we&amp;#39;ve been generating with Fluidkeys.&lt;/p&gt;

&lt;p&gt;We use Golang&amp;#39;s crypto/openpgp library which has a &lt;a href="https://godoc.org/golang.org/x/crypto/openpgp#NewEntity"&gt;function for generating a key&lt;/a&gt;. Unfortunately it seems that this function neglects to set &lt;em&gt;preferences&lt;/em&gt; on the new key.&lt;/p&gt;

&lt;p&gt;There are &lt;a href="https://tools.ietf.org/html/rfc4880#section-5.2.3.7"&gt;3 types of preferences&lt;/a&gt; (hash, symmetric key and compression) and these are there to tell other people what encryption algorithms like AES-256 you accept. The idea is you put the strongest ones first, then when the other person tries to encrypt to you, their software finds the most preferred, mutually supported algorithm.&lt;/p&gt;

&lt;h2&gt;No preferences defaults to bad security&lt;/h2&gt;

&lt;p&gt;Unfortunately, the OpenPGP specification says that if two implementations can&amp;#39;t agree on an algorithm they fall back to the &lt;strong&gt;lowest common denominator&lt;/strong&gt;, Triple DES and SHA1, which you &lt;strong&gt;must&lt;/strong&gt; support. These are old, weak algorithms, so it&amp;#39;s not ideal.&lt;/p&gt;

&lt;p&gt;Because newly generated keys didn&amp;#39;t have any preferences set, any messages encrypted to them were indeed using Triple DES. It wasn&amp;#39;t straightforward to actually observe this, but once I had a sneaky suspicion it might be happening I managed to get GnuPG to spit out some debug and take a look.&lt;/p&gt;

&lt;h2&gt;Our key rotation allows us to fix this&lt;/h2&gt;

&lt;p&gt;The last two weeks we&amp;#39;ve been talking about key rotation — we&amp;#39;ve managed to get Fluidkeys automatically expiring and re-generating encryption subkeys. (Release 0.2 coming very soon, promise!)&lt;/p&gt;

&lt;p&gt;Since we&amp;#39;ve built Fluidkeys to automatically, regularly inspect the key this is the ideal mechanism for looking for poorly &lt;em&gt;configured&lt;/em&gt; keys too. Alongside key rotation, we can tweak the key&amp;#39;s configuration and generate new self-signatures.&lt;/p&gt;

&lt;p&gt;So this week I&amp;#39;ve been hard at work collating best practice to work out, what &lt;em&gt;is&lt;/em&gt;the ideal configuration? And how much deviation should Fluidkeys tolerate from that?&lt;/p&gt;

&lt;p&gt;&lt;a href="https://riseup.net/en/security/message-security/openpgp/best-practices"&gt;Riseup&amp;#39;s OpenPGP best practices&lt;/a&gt; guide came in handy as usual, and mostly I&amp;#39;ve been encoding their rules into actual code. You can see that working in the screenshot below (the text hasn&amp;#39;t been designed yet):&lt;/p&gt;

&lt;p&gt;&lt;img src="../../images/2018-04-05-fluidkeys-key-list-with-missing-preferences.png" alt="A table of PGP keys with warnings about missing preferences" /&gt;&lt;/p&gt;

&lt;p&gt;This builds on the ideas in a previous prototype I hacked up earlier in the year which allows you to &lt;a href="https://www.expirybot.com/test-pgp-key/"&gt;test your PGP key&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Our hunch is that it will be valuable for Fluidkeys to bring together and codify best practice — not just for individual keys, but &lt;a href="https://www.fluidkeys.com/patterns-for-using-pgp-in-teams/"&gt;ways of using PGP together in a team&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Next week we&amp;#39;ll turn those warnings into actions so Fluidkeys can just fix them for you, then continue racing towards our next release 0.2...&lt;/p&gt;

&lt;p&gt;Thanks for reading!&lt;/p&gt;

&lt;p&gt;— Paul&lt;/p&gt;

&lt;p&gt;&lt;em&gt;All&lt;/em&gt; feedback is welcome, pop us an email to &lt;a href="mailto:hello@fluidkeys.com"&gt;hello@fluidkeys.com&lt;/a&gt;&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Week 8, We've got key rotation working!</title>
    <link rel="alternate" href="https://www.fluidkeys.com/weeknotes/week-8/"/>
    <id>https://www.fluidkeys.com/weeknotes/week-8/</id>
    <published>2018-09-28T00:00:00+00:00</published>
    <updated>2018-10-30T14:40:16+00:00</updated>
    <author>
      <name>Ian Drysdale</name>
    </author>
    <content type="html">&lt;p&gt;We&amp;#39;ve got key rotation working! When you run &lt;code&gt;fk key rotate&lt;/code&gt; Fluidkeys now goes off and checks your PGP keys. If you’ve got one set to expire years in the future, or one that is imminently expiring, it’ll helpfully offer to update them. In doing so it sets them to be valid until the end of next month. The gist of it is that doing this regularly means you end up using encryption keys that rotate every month. Nice and secure.&lt;/p&gt;

&lt;p&gt;“Roll VT”&lt;/p&gt;

&lt;div class="terminal-wrapper"&gt;
  &lt;img class="my-class" src="/images/fk-0.1.5-rotate-demo.svg" alt="a screen recording of `fk key rotate` in action"&gt;
&lt;/div&gt;

&lt;p&gt;A couple of weeks back we got this short and helpful bit of feedback:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;I don&amp;#39;t want to have to do anything.&lt;/p&gt;

&lt;p&gt;Can&amp;#39;t it just rotate it for me?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Yes, absolutely! Next up we&amp;#39;ll focus on making all this magic happen in the background.&lt;/p&gt;

&lt;p&gt;That’s it for this week.&lt;/p&gt;

&lt;p&gt;Despite &lt;a href="https://www.bbc.co.uk/news/business-45667370"&gt;Ryanair&amp;#39;s best efforts&lt;/a&gt;, I&amp;#39;m off to Portugal for a week. So we&amp;#39;ll both hear from Paul next time to see what he gets up to.&lt;/p&gt;

&lt;p&gt;See you in a fortnight.&lt;/p&gt;

&lt;p&gt;— Ian&lt;/p&gt;

&lt;p&gt;&lt;em&gt;All&lt;/em&gt; feedback is welcome, pop us an email to &lt;a href="mailto:hello@fluidkeys.com"&gt;hello@fluidkeys.com&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;P.S. Paul and I are hosting a &lt;a href="https://www.eventbrite.co.uk/e/digital-self-defence-reduce-your-facebook-footprint-tickets-50366286920"&gt;digital self defence class&lt;/a&gt; on October 9th in Liverpool. Come and learn how to reduce your Facebook footprint! 🙅🏽‍♀️&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Week 7, Patterns for PGP in teams</title>
    <link rel="alternate" href="https://www.fluidkeys.com/weeknotes/week-7/"/>
    <id>https://www.fluidkeys.com/weeknotes/week-7/</id>
    <published>2018-09-21T00:00:00+00:00</published>
    <updated>2018-10-30T14:40:16+00:00</updated>
    <author>
      <name>Ian Drysdale</name>
    </author>
    <content type="html">&lt;p&gt;I&amp;#39;ll keep it short this week...&lt;/p&gt;

&lt;p&gt;We got plenty of excellent feedback on the &lt;a href="/blog/week-6"&gt;technical detail of how we see key rotation working in Fluidkeys&lt;/a&gt; that we shared last week. Thank you all for that! It&amp;#39;s nice to know there are people out there that care about this stuff and who are up for taking the time to think it through with us. 🙏&lt;/p&gt;

&lt;p&gt;We&amp;#39;re cracking on with v0.2 and have been deep in the bowels of GPG and Go. Having identified a bunch of warnings about a key, we&amp;#39;re now translating those into actions that Fluidkeys can take to remedy them. Hopefully we&amp;#39;ll have something for you to play with next week.&lt;/p&gt;

&lt;p&gt;We worked together from Manchester on Tuesday. This meant we got to have lunch with the old &lt;a href="http://dpr.coop.co.uk"&gt;DPR crew&lt;/a&gt;. 💗&lt;/p&gt;

&lt;p&gt;Oh, and we&amp;#39;ve started writing a series of patterns for &lt;a href="https://docs.google.com/document/d/1suiNvAHVyI0fDBUd_Z6oFwrh5PrbcrhIt9zFb4KcHuA"&gt;how we think you should use PGP as part of your team&lt;/a&gt;. I&amp;#39;ve begun documenting how you can implement these patterns today  using GnuPG.... But good grief, it&amp;#39;s far from easy! 🤢  It&amp;#39;s no wonder people give up on it all!&lt;/p&gt;

&lt;p&gt;Lastly, two related tidbits:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://lists.gnupg.org/pipermail/gnupg-users/2018-September/060987.html"&gt;GnuPG can now be used to perform notarial acts in the State of Washington&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;If you happen to be in Liverpool on October 9, Paul and I will be hosting a &lt;a href="https://www.eventbrite.co.uk/e/digital-self-defence-reduce-your-facebook-footprint-tickets-50366286920"&gt;digital self defence class&lt;/a&gt;. Come and learn how to reduce your Facebook footprint! 🙅🏽‍♀️&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
  </entry>
  <entry>
    <title>Week 6, Building Key Rotation</title>
    <link rel="alternate" href="https://www.fluidkeys.com/weeknotes/week-6/"/>
    <id>https://www.fluidkeys.com/weeknotes/week-6/</id>
    <published>2018-09-14T00:00:00+00:00</published>
    <updated>2018-10-30T14:40:16+00:00</updated>
    <author>
      <name>Paul Furley</name>
    </author>
    <content type="html">&lt;p&gt;The short version:&lt;/p&gt;

&lt;p&gt;This week we:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  Designed how key rotation will work&lt;/li&gt;
&lt;li&gt;  Built a command for listing your keys&lt;/li&gt;
&lt;li&gt;  Found &amp;amp; fixed a bug in Go&amp;#39;s openpgp library&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Please give us feedback on key rotation&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://www.fluidkeys.com/blog/week-5/"&gt;Last week&lt;/a&gt; Ian teased that Fluidkeys 0.2 will do key rotation for you. This week, we came up with a draft design and started implementing this.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;But&lt;/strong&gt; your feedback would be incredibly helpful!&lt;/p&gt;

&lt;p&gt;Here&amp;#39;s the technical detail of what we&amp;#39;re thinking:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  Every month, from the 1st, you&amp;#39;ll be invited to rotate your keys&lt;/li&gt;
&lt;li&gt;  You rotate by typing &lt;code&gt;fk key rotate&lt;/code&gt;, ideally before the 10th and definitely by the end of the month&lt;/li&gt;
&lt;li&gt;  A new encryption subkey is created, valid for &lt;strong&gt;30 days after the 1st of the next month&lt;/strong&gt; — so if you rotate on the 1st (or any day) in February, your new subkey will be valid until the 30th March (March 1st + 30)&lt;/li&gt;
&lt;li&gt;  Your primary key expiry is extended to the same date (technically, your User ID self signatures, but hey).&lt;/li&gt;
&lt;li&gt;  &lt;strong&gt;You can use cron to do it for you&lt;/strong&gt; (by storing your password in your system keyring). It&amp;#39;ll only rotate keys which need rotating.&lt;/li&gt;
&lt;li&gt;  Your backup ZIP file is automatically updated with your new subkey&lt;/li&gt;
&lt;li&gt;  (not yet) Your updated public key is seamlessly distributed to your team mates (and theirs are downloaded to your system, too)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;There&amp;#39;s a couple of things to point out with this scheme:&lt;/p&gt;

&lt;h3&gt;Rotation doesn&amp;#39;t affect your primary key&lt;/h3&gt;

&lt;p&gt;We&amp;#39;re actually trying to move away from long lived keys, but if you &lt;em&gt;do&lt;/em&gt; have a well-known key, and perhaps you&amp;#39;ve published your fingerprint far and wide (like me), that&amp;#39;s fine.&lt;/p&gt;

&lt;p&gt;In this scheme, it&amp;#39;s only the encryption subkey that&amp;#39;s affected.&lt;/p&gt;

&lt;h3&gt;Short-lived keys sidestep the painful revocation process&lt;/h3&gt;

&lt;p&gt;Revocation — when you announce that a key is no longer valid — has proven to be a bit of a nightmare in practice. It&amp;#39;s tricky to generate a revocation message, especially if you&amp;#39;ve lost your key, and it&amp;#39;s tricky to reliably ensure everyone sees it. Because revocation is not practised often, it&amp;#39;s not reliable at the time when you do try to use it.&lt;/p&gt;

&lt;p&gt;Short-lived keys sidestep the difficulties of revocation. Instead of a long-lived key with a &lt;em&gt;possible&lt;/em&gt; revocation notice, use a short-lived key and constantly refresh it.&lt;/p&gt;

&lt;p&gt;The refresh message is a bit like a heartbeat — &amp;quot;this key&amp;#39;s still OK! I haven&amp;#39;t lost it!&amp;quot;&lt;/p&gt;

&lt;h3&gt;Team members will rotate keys around the same time&lt;/h3&gt;

&lt;p&gt;By triggering rotation on the 1st of the month, all team members will be in sync which we think helps with team members supporting each other.&lt;/p&gt;

&lt;p&gt;Provided we make it incredibly quick and easy, I think it could be a bit of a ceremony … that security thing we do each month.&lt;/p&gt;

&lt;p&gt;Also, because &lt;em&gt;all&lt;/em&gt; your keys (if you have more than one) trigger on the same day, you only need to rotate every month as a maximum.&lt;/p&gt;

&lt;h3&gt;Key rotation relies on a solid method for updating keys&lt;/h3&gt;

&lt;p&gt;Rotating your keys regularly is a really powerful feature for security.&lt;/p&gt;

&lt;p&gt;For members of your team, Fluidkeys will take care of distributing your updated key to everyone else, and vice versa.&lt;/p&gt;

&lt;p&gt;People &lt;em&gt;outside&lt;/em&gt; the team, whose software you don&amp;#39;t control, may have difficulty if their software doesn&amp;#39;t automatically update your key. We&amp;#39;re still thinking about this, and would value your input.&lt;/p&gt;

&lt;h3&gt;What do you think?&lt;/h3&gt;

&lt;p&gt;I&amp;#39;d love to hear your thoughts on the key rotation strategy I&amp;#39;ve just described.&lt;/p&gt;

&lt;p&gt;Do please send us an email to &lt;a href="mailto:hello@fluidkeys.com"&gt;hello@fluidkeys.com&lt;/a&gt;. Thank you!&lt;/p&gt;

&lt;h2&gt;Now you can actually list your keys!&lt;/h2&gt;

&lt;p&gt;Most of the work we did this week was displaying back the keys you&amp;#39;ve created or linked from GnuPG. Here&amp;#39;s how we&amp;#39;re looking:&lt;/p&gt;

&lt;p&gt;&lt;img src="../../images/2018-09-14-fluidkeys-list-pgp-keys.png" alt="a table with three columns displaying keys" /&gt;&lt;/p&gt;

&lt;p&gt;The status column is starting to shape up… that&amp;#39;s where we&amp;#39;re starting to surface issues with the key, and below the table we&amp;#39;ll put simple, plain-English instructions on how to fix the issue.&lt;/p&gt;

&lt;h2&gt;We submitted another fix to golang/x/crypto&lt;/h2&gt;

&lt;p&gt;We&amp;#39;ve got all-too-familiar with Go&amp;#39;s crypto/openpgp library. This week we bumped into &lt;a href="https://github.com/golang/go/issues/15353"&gt;a known bug&lt;/a&gt; relating to subkeys. The way I&amp;#39;ve used my key in the past is to repeatedly extend the expiry date of my subkeys. Unfortunately crypto/openpgp couldn&amp;#39;t handle that case, taking only the first subkey binding signature, rather than the most recent.&lt;/p&gt;

&lt;p&gt;We made a working patch on our fork and &lt;a href="https://github.com/golang/crypto/pull/57"&gt;submitted a pull request to Google&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;As ever, thanks for reading, and your feedback is greatly appreciated.&lt;/p&gt;

&lt;p&gt;— Paul&lt;/p&gt;

&lt;p&gt;&lt;em&gt;All&lt;/em&gt; feedback is welcome, pop us an email to &lt;a href="mailto:hello@fluidkeys.com"&gt;hello@fluidkeys.com&lt;/a&gt;&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Week 5, Backups</title>
    <link rel="alternate" href="https://www.fluidkeys.com/weeknotes/week-5/"/>
    <id>https://www.fluidkeys.com/weeknotes/week-5/</id>
    <published>2018-09-07T00:00:00+00:00</published>
    <updated>2018-10-30T14:40:16+00:00</updated>
    <author>
      <name>Ian Drysdale</name>
    </author>
    <content type="html">&lt;h2&gt;The short version&lt;/h2&gt;

&lt;p&gt;This week we:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;got Fluidkeys to make a revocation certificate for your key and back it up&lt;/li&gt;
&lt;li&gt;refreshed our homepage showing our planned roadmap&lt;/li&gt;
&lt;li&gt;presented at the Liverpool Linux User Group meetup&lt;/li&gt;
&lt;li&gt;decided 0.2 will allow you to setup key rotation&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Fluidkeys now automatically creates and backs up revocation certificates when creating a key&lt;/h2&gt;

&lt;p&gt;Two years ago I created a PGP Key, pushed it to a key server and then forgot about it. I also forgot my password that I used to secure it 🤦‍ This basically renders the key useless. Worse still, it didn&amp;#39;t have an expiry date! Fortunately, PGP has a way you can mark such a dud key as &lt;code&gt;revoked&lt;/code&gt;. The catch is that in order to do this, you need to have generated a revocation certificate... which is impossible if you&amp;#39;ve forgotten your password! 😡&lt;/p&gt;

&lt;p&gt;We figured it&amp;#39;d be sensible for Fluidkeys to automatically create this revocation certificate for you when you create a key and back it up for you. That way, if you do ever run in to problems with they key it&amp;#39;s easy to mark it as revoked.&lt;/p&gt;

&lt;h2&gt;Fluidkeys roadmap is now online&lt;/h2&gt;

&lt;p&gt;We&amp;#39;ve refreshed our homepage at www.fluidkeys.com. On it we now have a checklist of features working towards our 1.0 release. We also decided to make our Trello board (of prioritised tasks) public. If you &lt;em&gt;really&lt;/em&gt; want to snoop on us, this is the detail 🔎&lt;/p&gt;

&lt;h2&gt;Paul presented at Liverpool Linux User Group (LivLUG)&lt;/h2&gt;

&lt;p&gt;On Wednesday evening, Paul presented at the monthly Liverpool Linux User Group. He spoke about the superpowers that PGP can give people, but the challenges they face in using it. We also demoed Fluidkeys. Thanks to everyone who came along we had a great discussion afterwards. We were looking for connections to sysadmins that might want to test it and for introductions to open source entrepreneurs who&amp;#39;d successfully built businesses around their software.&lt;/p&gt;

&lt;blockquote class="twitter-tweet" data-lang="en"&gt;&lt;p lang="en" dir="ltr"&gt;Here at the &lt;a href="https://twitter.com/livlug?ref_src=twsrc%5Etfw"&gt;@livlug&lt;/a&gt; meeting at &lt;a href="https://twitter.com/DoESLiverpool?ref_src=twsrc%5Etfw"&gt;@DoESLiverpool&lt;/a&gt; this evening to hear about &lt;a href="https://twitter.com/hashtag/PGP?src=hash&amp;amp;ref_src=twsrc%5Etfw"&gt;#PGP&lt;/a&gt; &lt;a href="https://twitter.com/hashtag/encryption?src=hash&amp;amp;ref_src=twsrc%5Etfw"&gt;#encryption&lt;/a&gt; and &lt;a href="https://twitter.com/hashtag/privacy?src=hash&amp;amp;ref_src=twsrc%5Etfw"&gt;#privacy&lt;/a&gt; and FluidKeys (their new project) from &lt;a href="https://twitter.com/paul_furley?ref_src=twsrc%5Etfw"&gt;@paul_furley&lt;/a&gt; and &lt;a href="https://twitter.com/idrysdale?ref_src=twsrc%5Etfw"&gt;@idrysdale&lt;/a&gt; &lt;a href="https://twitter.com/hashtag/weeknotes?src=hash&amp;amp;ref_src=twsrc%5Etfw"&gt;#weeknotes&lt;/a&gt; &lt;a href="https://t.co/FQiVghujaW"&gt;pic.twitter.com/FQiVghujaW&lt;/a&gt;&lt;/p&gt;&amp;mdash; Adrian McEwen (@amcewen) &lt;a href="https://twitter.com/amcewen/status/1037412682947874816?ref_src=twsrc%5Etfw"&gt;September 5, 2018&lt;/a&gt;&lt;/blockquote&gt;

&lt;script async src="https://platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;

&lt;h2&gt;Fluidkeys 0.2 will automatically rotate your keys each month&lt;/h2&gt;

&lt;p&gt;We&amp;#39;ve got Fluidkeys generating new keys, or linking to keys you&amp;#39;ve already made in GPG. Now time for something more useful: key rotation!&lt;/p&gt;

&lt;p&gt;Key rotation is what it sounds like, tossing out an old one, and replacing it with a new one. OpenPGP allows you to do key rotation without having to make a whole new key, but it involves fiddly subkeys and in practice very few people do it.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;If your key becomes compromised the amount of data you&amp;#39;ve exposed will be limited.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;With some ciphers, the more data that you&amp;#39;ve encrypted with your key, the easier it will be to crack. By rotating the key you limit the amount of data you&amp;#39;ll ever use against each one. (&lt;a href="https://www.crypteron.com/blog/pci-dss-key-rotations-simplified/]"&gt;more on that on crypteron.com&lt;/a&gt;)&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Confession time: I don&amp;#39;t rotate my key. 😈&lt;/p&gt;

&lt;p&gt;Fluidkeys 0.2, by automatically rotating my key, would be instantly useful... And it&amp;#39;s a step towards a team service that would do this and keep them all in sync across your organisation. But I&amp;#39;m getting ahead of myself. More on that soon...&lt;/p&gt;

&lt;p&gt;— Ian&lt;/p&gt;

&lt;p&gt;&lt;em&gt;All&lt;/em&gt; feedback is welcome, pop us an email to &lt;a href="mailto:paul@paulfurley.com"&gt;paul@paulfurley.com&lt;/a&gt; and &lt;a href="mailto:idrysdale@gmail.com"&gt;idrysdale@gmail.com&lt;/a&gt;&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Week 4, Sketching a command line interface</title>
    <link rel="alternate" href="https://www.fluidkeys.com/weeknotes/week-4/"/>
    <id>https://www.fluidkeys.com/weeknotes/week-4/</id>
    <published>2018-08-31T00:00:00+00:00</published>
    <updated>2018-10-30T14:40:16+00:00</updated>
    <author>
      <name>Ian Drysdale</name>
    </author>
    <content type="html">&lt;p&gt;Paul and I are building Fluidkeys, software that helps teams protect themselves with strong encryption.&lt;/p&gt;

&lt;h2&gt;The short version&lt;/h2&gt;

&lt;p&gt;This week&amp;#39;s been a short one. 🏝 Paul&amp;#39;s on holiday. Meanwhile I&amp;#39;ve:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  started sketching what a &lt;strong&gt;command line interface&lt;/strong&gt; for Fluidkeys could look like for administrators and their team members&lt;/li&gt;
&lt;li&gt;  made keys generated with Fluidkeys expire in 60 days&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Prototyping a command line interface 📺&lt;/h2&gt;

&lt;p&gt;We&amp;#39;re starting to build Fluidkeys by focusing on security conscious &lt;em&gt;developers&lt;/em&gt; and &lt;em&gt;sysadmins&lt;/em&gt;. We think we can make something that helps them get their teams using strong encryption. Therefore our first release will be an application they&amp;#39;ll run from the terminal. We imagine they&amp;#39;ll use this to get setup, then start inviting other members of their team to install it.&lt;/p&gt;

&lt;p&gt;Last week, &lt;a href="https://www.fluidkeys.com/blog/week-3/"&gt;Paul introduced two personas&lt;/a&gt; that were helpful in sketching out how this could work at a high level.&lt;/p&gt;

&lt;p&gt;While he&amp;#39;s been off in France, I&amp;#39;ve taken this thinking a little further and began writing some example commands they could run and the accompanying output they&amp;#39;d receive. You can &lt;a href="https://www.fluidkeys.com/cli-prototype/team"&gt;take a look here&lt;/a&gt;.&lt;/p&gt;

&lt;pre class="terminal"&gt;
&lt;span class="prompt"&gt;➜&lt;/span&gt;  &lt;span class="directory"&gt;~&lt;/span&gt; fk

&lt;span&gt;Start with a key locker&lt;/span&gt;
====
In Fluidkeys, everything starts with a locker. This is the place you and others in your organisation place their keys for safe keeping.

Is your group already using Fluidkeys?

1. Find your Fluidkeys locker 🔎
2. Create a new locker ✨

[1/2] : &lt;span class="directory"&gt;_&lt;/span&gt;

Creating a new locker &lt;span class="spinner"&gt;\&lt;/span&gt;... &lt;span class="positive"&gt;[done]&lt;/span&gt;

We'll now store your key in the new locker and set you up as an adminsitrator

&lt;span class="information"&gt;Found GnuPGP, would you like to import an existing key from there? &lt;/span&gt; [Y/n] &lt;span class="cursor"&gt;_&lt;/span&gt;
&lt;/pre&gt;

&lt;p&gt;All of these are &lt;em&gt;very&lt;/em&gt; early doodles, but I think we&amp;#39;ll find them useful next week as we start to work up the interface for this release.&lt;/p&gt;

&lt;h2&gt;Continuing to lay the foundation 🏗️&lt;/h2&gt;

&lt;p&gt;Meanwhile, we&amp;#39;ve also made keys generated using Fluidkeys expire in 60 days. Later we&amp;#39;ll implement some sort of &lt;a href="https://www.owasp.org/index.php/Key_Management_Cheat_Sheet#Key_Rotation"&gt;key rotation&lt;/a&gt;, but I found getting this working useful for improving my understanding of how &lt;a href="https://godoc.org/golang.org/x/crypto/openpgp"&gt;Go&amp;#39;s openpgp library&lt;/a&gt; works. 🕵️‍♂️&lt;/p&gt;

&lt;p&gt;Despite being on holiday, I&amp;#39;ve seen Paul is pushing the odd work in progress commit to git... He&amp;#39;s been dabbling with making it so each time you generate a key with Fluidkeys you also automatically create a revocation certificate and this gets zipped as part of your backup.&lt;/p&gt;

&lt;p&gt;We also opened a joint bank account in under 3 days. &lt;em&gt;Rapid&lt;/em&gt;. Well done &lt;a href="https://monzo.com/"&gt;Monzo&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Thanks for reading.&lt;/p&gt;

&lt;p&gt;— Ian&lt;/p&gt;

&lt;p&gt;&lt;em&gt;All&lt;/em&gt; feedback is welcome, pop us an email to &lt;a href="mailto:paul@paulfurley.com"&gt;paul@paulfurley.com&lt;/a&gt; and &lt;a href="mailto:idrysdale@gmail.com"&gt;idrysdale@gmail.com&lt;/a&gt;&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Week 3, Released 0.1 🎉</title>
    <link rel="alternate" href="https://www.fluidkeys.com/weeknotes/week-3/"/>
    <id>https://www.fluidkeys.com/weeknotes/week-3/</id>
    <published>2018-08-24T00:00:00+00:00</published>
    <updated>2018-10-30T14:40:16+00:00</updated>
    <author>
      <name>Paul Furley</name>
    </author>
    <content type="html">&lt;h2&gt;The short version&lt;/h2&gt;

&lt;p&gt;This week we:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  released version v0.1 of Fluidkeys and sent it to 10 people&lt;/li&gt;
&lt;li&gt;  extended the Go x/crypto/openpgp library&lt;/li&gt;
&lt;li&gt;  committed to a theme for v0.2&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;We released Fluidkeys v0.1&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://www.fluidkeys.com/blog/week-2/"&gt;In last week&amp;#39;s notes&lt;/a&gt; I explained that v0.1 would help people generate a best practice PGP key, and went through some of the usability ideas we wanted to implement.&lt;/p&gt;

&lt;p&gt;This week was extremely focused, with a lot of pairing, learning, and building the first release. It was extremely helpful having a clear goal of what the release would do, so we could crank through tasks on trello, seeing it appearing bit by bit.&lt;/p&gt;

&lt;p&gt;Ian&amp;#39;s got really into test-driven development — he&amp;#39;s literally building broken tests first, then implementing the code to pass the tests. It&amp;#39;s keeping me honest — it&amp;#39;s easy to fall into bad habits of &amp;quot;I&amp;#39;ll test this later&amp;quot;, but then you fail to. It&amp;#39;s a short-term investment in time (it takes longer to write code with tests) with a very clear long term return (it&amp;#39;s much easier to iterate code in the future with a solid test suite).&lt;/p&gt;

&lt;p&gt;Anyway &lt;a href="https://www.fluidkeys.com/blog/release-0-1/"&gt;we managed to release Fluidkeys v0.1&lt;/a&gt; — a little delayed, but released all the same. We sent it to our original research participants and others in the community, and already had some great feedback, for which we&amp;#39;re extremely grateful.&lt;/p&gt;

&lt;h2&gt;We extended x/crypto/openpgp&lt;/h2&gt;

&lt;p&gt;I&amp;#39;m really enjoying working with Go, which feels like it was made for incredibly picky people…&lt;/p&gt;

&lt;p&gt;It&amp;#39;s got a cool standard library, and we&amp;#39;ve benefitted from there being a lot of openpgp code already written.&lt;/p&gt;

&lt;p&gt;It&amp;#39;s missing a key feature though, which is password-encrypting private keys. This matters for Fluidkeys in two places:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt; We output a backup ZIP file containing the public and private key. People should be able to copy the ZIP file to somewhere like Dropbox without giving Dropbox access to their private key, and without having to &lt;em&gt;further&lt;/em&gt; encrypt the file.&lt;/li&gt;
&lt;li&gt; Fluidkeys imports the new key into GnuPG. Without a password, any code running on the machine could simply call GnuPG in the background and use the key to sign things, decrypt things, and so on.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;We toyed with the idea of not using a password, but ultimately couldn&amp;#39;t do this in good faith while claiming the key follows &amp;quot;best practice&amp;quot;.&lt;/p&gt;

&lt;p&gt;I must admit, adding password encryption to &lt;a href="https://godoc.org/golang.org/x/crypto/openpgp"&gt;Go&amp;#39;s openpgp library&lt;/a&gt; was a challenge. I&amp;#39;m pretty familiar with good old &lt;a href="https://tools.ietf.org/html/rfc4880"&gt;RFC 4880&lt;/a&gt; but I don&amp;#39;t find it well written, so it wasn&amp;#39;t clear how encrypted private keys should be constructed. There were a few grumpy, frustrated moments, with screens half full of debug output, and the other half filled with impenetrable ramblings from the spec.&lt;/p&gt;

&lt;p&gt;We got there in the end, and after a bit of cleanup and more testing we&amp;#39;re going to submit it back to Google to try and get &lt;a href="https://github.com/fluidkeys/crypto/tree/encrypt-private-key"&gt;our fork&lt;/a&gt; back into the core library. That&amp;#39;ll be something.&lt;/p&gt;

&lt;h2&gt;Fluidkeys 0.2 will help you work with existing keys&lt;/h2&gt;

&lt;p&gt;The first release was all about &lt;em&gt;generating&lt;/em&gt; &lt;em&gt;a new key&lt;/em&gt; and getting it into GnuPG. But it&amp;#39;s a little underwhelming if you&amp;#39;re already using GnuPG — when you run it again, it just tries to make you another key…&lt;/p&gt;

&lt;p&gt;Considering about how Fluidkeys could get adopted in a team, and based on what we&amp;#39;ve already learned about teams using PGP, we&amp;#39;re thinking about two different types of person.&lt;/p&gt;

&lt;p&gt;(Excuse the clumsy over-generalisation, but this persona-ish approach is useful for thinking about this point):&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt; &lt;strong&gt;Tina, product lead &amp;amp; privacy champion&lt;/strong&gt;

&lt;ul&gt;
&lt;li&gt;  Tina feels responsible if something went wrong with the product, like a data breach. She wants to get the team using end-to-end encryption for sharing personal data inside the team, rather than via a cloud provider&lt;/li&gt;
&lt;li&gt;  Tina is pretty confident using PGP already but is not a cryptography expert and isn&amp;#39;t sure about best practice.&lt;/li&gt;
&lt;li&gt;  Tina is the driving force behind adopting PGP in the team, but finds it very difficult to teach to other team members.&lt;/li&gt;
&lt;li&gt;  Tina spends several hours setting up new developers on the team with PGP, and several hours a month helping with forgotten passwords and weird error message using GPG.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt; &lt;strong&gt;Chat, a frontend developer&lt;/strong&gt;

&lt;ul&gt;
&lt;li&gt;  Chat understands why Tina advocates for using PGP, but hasn&amp;#39;t used it before&lt;/li&gt;
&lt;li&gt;  Chat is a great developer but isn&amp;#39;t interested in learning the details of how end to end encryption works&lt;/li&gt;
&lt;li&gt;  Chat trusts Tina to make decisions on his behalf about how to use PGP&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;We are much more likely to reach people like Tina than Chat, so it&amp;#39;s really her we&amp;#39;re focusing on helping.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;We need to make it really easy for Tina to get Chat using PGP.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;For Tina, Fluidkeys 0.1 helps a bit: she can ask Chat to install it, knowing he&amp;#39;ll be able to make himself a good key and he probably won&amp;#39;t forget the password. He won&amp;#39;t be asked lots of difficult questions and it won&amp;#39;t be a horrible first experience.&lt;/p&gt;

&lt;p&gt;This version &lt;em&gt;may&lt;/em&gt; also help if Tina&amp;#39;s unsure whether her key is any good. Does it use the right key size? Are the cipher preferences configured correctly? If she&amp;#39;s not too attached to her existing key, she may actually use Fluidkeys to make herself a brand new key and ditch the old one.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;If not, Fluidkeys needs to let Tina use her existing key&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Fluidkeys is going to help teams manage their keys. It would never mess with people&amp;#39;s existing keys without them asking, but it&amp;#39;s important to give them the option.&lt;/p&gt;

&lt;p&gt;Personally, my own key is far too well spread around the internet for me to want to make a new key without a good reason. I need to be able to ask Fluidkeys to use my existing key.&lt;/p&gt;

&lt;p&gt;So that&amp;#39;s what we&amp;#39;re doing next. Then we can get onto the cool stuff.&lt;/p&gt;

&lt;p&gt;Thanks for reading.&lt;/p&gt;

&lt;p&gt;— Paul&lt;/p&gt;

&lt;p&gt;&lt;em&gt;All&lt;/em&gt; feedback is welcome, pop us an email to &lt;a href="mailto:paul@paulfurley.com"&gt;paul@paulfurley.com&lt;/a&gt; and &lt;a href="mailto:idrysdale@gmail.com"&gt;idrysdale@gmail.com&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;(Also available as &lt;a href="https://www.fluidkeys.com/blog/feed.xml"&gt;RSS/Atom&lt;/a&gt;, thanks very much to Sym)&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Announcing Fluidkeys v0.1!</title>
    <link rel="alternate" href="https://www.fluidkeys.com/blog/release-0-1/"/>
    <id>https://www.fluidkeys.com/blog/release-0-1/</id>
    <published>2018-08-23T00:00:00+00:00</published>
    <updated>2018-10-30T14:40:16+00:00</updated>
    <author>
      <name>Paul Furley</name>
    </author>
    <content type="html">&lt;p&gt;Ian and I are extremely proud to announce the very first (extremely minimal) release of Fluidkeys.&lt;/p&gt;

&lt;p&gt;We&amp;#39;re building Fluidkeys to help teams protect themselves with strong encryption. Fluidkeys builds on the OpenPGP standard and is compatible with other OpenPGP software.&lt;/p&gt;

&lt;h2&gt;Fluidkeys 0.1 helps you make a PGP key&lt;/h2&gt;

&lt;p&gt;This release of Fluidkeys is aimed at helping developers and sysadmins get started using PGP. (We&amp;#39;re starting with technical folks but Fluidkeys will soon be for &lt;em&gt;everyone&lt;/em&gt;.)&lt;/p&gt;

&lt;p&gt;Once installed, run &lt;code&gt;fk&lt;/code&gt; and it&amp;#39;ll:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Create a best-practice OpenPGP key&lt;/li&gt;
&lt;li&gt;Make a strong, memorable password and help you record it&lt;/li&gt;
&lt;li&gt;Import your new key into GnuPG so you can start using it&lt;/li&gt;
&lt;li&gt;Save a backup ZIP file of the whole key that you can restore from later&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;We&amp;#39;d love it if you &lt;a href="https://github.com/fluidkeys/fluidkeys"&gt;tried it out&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;What next?&lt;/h2&gt;

&lt;p&gt;We&amp;#39;ve got loads of ideas for v0.2, but we&amp;#39;d like to hear from you. Do any of these take your fancy?&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Automatically publish your newly generated key on the web in a nice to find format&lt;/li&gt;
&lt;li&gt;Email you an encrypted message for you to practice decrypting using your new key&lt;/li&gt;
&lt;li&gt;Automatically rotate and upgrade your keys&lt;/li&gt;
&lt;li&gt;Import your existing keys from GnuPG&lt;/li&gt;
&lt;li&gt;Test imported keys against best practice&lt;/li&gt;
&lt;li&gt;Setup GnuPG and Github for signed, verified commits&lt;/li&gt;
&lt;li&gt;Store your key backup and password in 1Password or LastPass&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Or something else?&lt;/p&gt;

&lt;h2&gt;Stay up to date&lt;/h2&gt;

&lt;p&gt;We&amp;#39;re writing weeknotes at &lt;a href="https://www.fluidkeys.com/blog"&gt;fluidkeys.com/blog&lt;/a&gt; (available as &lt;a href="https://www.fluidkeys.com/blog/feed.xml"&gt;RSS/atom&lt;/a&gt;).&lt;/p&gt;

&lt;p&gt;We&amp;#39;d love to hear from you, we&amp;#39;re &lt;a href="mailto:paul@paulfurley.com"&gt;paul@paulfurley.com&lt;/a&gt; and &lt;a href="mailto:idrysdale@gmail.com"&gt;idrysdale@gmail.com&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;— Paul&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Week 2, Starting Fluidkeys</title>
    <link rel="alternate" href="https://www.fluidkeys.com/weeknotes/week-2/"/>
    <id>https://www.fluidkeys.com/weeknotes/week-2/</id>
    <published>2018-08-17T00:00:00+00:00</published>
    <updated>2018-10-30T14:40:16+00:00</updated>
    <author>
      <name>Paul Furley</name>
    </author>
    <content type="html">&lt;p&gt;Recap: Ian and I are building Fluidkeys, software that helps teams protect themselves with strong encryption. Fluidkeys builds on the OpenPGP standard and is compatible with other OpenPGP software.&lt;/p&gt;

&lt;h2&gt;The short version&lt;/h2&gt;

&lt;p&gt;This week we&amp;#39;ve:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  clarified our thinking about building new features versus improving PGP&lt;/li&gt;
&lt;li&gt;  started building Fluidkeys, working towards v0.1.0 next week&lt;/li&gt;
&lt;li&gt;  set up Jenkins for continuous deployment&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;End user features vs improving PGP&lt;/h2&gt;

&lt;p&gt;We&amp;#39;ve got lots of ideas for cool things Fluidkeys could do to help teams protect themselves.&lt;/p&gt;

&lt;p&gt;Early in the week we confused ourselves about what we&amp;#39;re trying to do… are we &lt;strong&gt;improving PGP&lt;/strong&gt; or &lt;strong&gt;making end-user features&lt;/strong&gt;?&lt;/p&gt;

&lt;p&gt;For example, we&amp;#39;re interested in integrating with Slack to allow sending end-to-end encrypted messages. What&amp;#39;s that got to do with wrapping GnuPG or making a PGP key?&lt;/p&gt;

&lt;p&gt;Here&amp;#39;s what we realised:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  To build features like protecting Slack messages with end to end encryption requires a &lt;strong&gt;public key distribution&lt;/strong&gt; system (e.g. I want to encrypt this file to Nina, what public key should I use?)&lt;/li&gt;
&lt;li&gt;  Email is a very popular &lt;strong&gt;identity system&lt;/strong&gt;. It&amp;#39;s decentralised, difficult to censor, and extremely well understood. Slack (and most other software) piggy-backs on email as its identity system.&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://tools.ietf.org/html/rfc4880"&gt;OpenPGP is an open standard&lt;/a&gt; which can link an identifier like an &lt;strong&gt;email address&lt;/strong&gt; to a &lt;strong&gt;public key.&lt;/strong&gt; This can be a foundation for a &lt;strong&gt;public key distribution&lt;/strong&gt; system.&lt;/li&gt;
&lt;li&gt;  We need to make OpenPGP usable as a foundation for Fluidkeys to build more offer useful end-to-end encryption features.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;With that realisation, we can separate features into two classes:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt; Features which make OpenPGP easier to use, such as:

&lt;ol&gt;
&lt;li&gt; &lt;strong&gt;make a new PGP key&lt;/strong&gt; according to best practice&lt;/li&gt;
&lt;li&gt; &lt;strong&gt;make a &amp;quot;strong&amp;quot; password&lt;/strong&gt; and keep it safe&lt;/li&gt;
&lt;li&gt; &lt;strong&gt;backup your PGP key&lt;/strong&gt; in case you lose it&lt;/li&gt;
&lt;li&gt; &lt;strong&gt;publish your PGP somewhere&lt;/strong&gt; on the internet&lt;/li&gt;
&lt;li&gt; &lt;strong&gt;automatically find your team&amp;#39;s keys&lt;/strong&gt; and keep them updated&lt;/li&gt;
&lt;li&gt; &lt;strong&gt;automatically rotate and upgrade&lt;/strong&gt; your keys&lt;/li&gt;
&lt;/ol&gt;&lt;/li&gt;
&lt;li&gt; Features which build on top of OpenPGP as a foundation, such as:

&lt;ol&gt;
&lt;li&gt; &lt;strong&gt;send huge files to your team-mates&lt;/strong&gt; with end-to-end encryption and integrity checking (current workaround: password protected ZIP files, send the password via WhatsApp, hope the file didn&amp;#39;t get corrupted)&lt;/li&gt;
&lt;li&gt; &lt;strong&gt;send encrypted messages via Slack&lt;/strong&gt; while transparently end-to-end encryptiong and decrypting them the other side&lt;/li&gt;
&lt;li&gt; &lt;strong&gt;quickly share a password to another team-mate&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;Improving usability of PGP with Fluidkeys v0.1.0&lt;/h2&gt;

&lt;p&gt;With that in mind, we started working towards our first mini-release of Fluidkeys. The aim of version 0.1.0 is simple:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&amp;quot;Make a best-practice PGP key that I can use with GnuPG&amp;quot;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;This release is aimed at developers and sysadmins, and we wanted to tackle these specific usability issues in other software:&lt;/p&gt;

&lt;h3&gt;People don&amp;#39;t know how to answer questions about cryptography&lt;/h3&gt;

&lt;p&gt;It&amp;#39;s just silly to expect non-cryptographers to tell you what key size they want, so we don&amp;#39;t ask them. We deferred to &lt;a href="https://infosec.mozilla.org/guidelines/key_management.html"&gt;Mozilla&amp;#39;s Infosec team&amp;#39;s key management guidance&lt;/a&gt; and went with a 4096-bit RSA key.&lt;/p&gt;

&lt;p&gt;As a usability principle, we plan to ask as few questions as possible, and be opinionated with (strong) defaults instead. (Hypothesis: teams will defer to our expertise over their own — we&amp;#39;ll have to earn this credibility.)&lt;/p&gt;

&lt;h3&gt;People don&amp;#39;t know what&amp;#39;s meant by a &amp;quot;strong password&amp;quot;, and we aren&amp;#39;t good at inventing passwords&lt;/h3&gt;

&lt;p&gt;It&amp;#39;s a heavy mental burden to be asked to come up with a new password, &lt;strong&gt;and&lt;/strong&gt; decide what&amp;#39;s meant by &amp;quot;secure&amp;quot;.&lt;/p&gt;

&lt;p&gt;We&amp;#39;ve tried to side-step both issues by &lt;strong&gt;just&lt;/strong&gt; &lt;strong&gt;making a password for them&lt;/strong&gt;. We&amp;#39;ve used the &lt;a href="http://world.std.com/%7Ereinhold/diceware.html"&gt;6-word Diceware technique&lt;/a&gt; with &lt;a href="https://www.eff.org/deeplinks/2016/07/new-wordlists-random-passphrases"&gt;EFF&amp;#39;s wordlist&lt;/a&gt; which provides a number of usability improvements. It generates relatively memorable passwords like this:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;shindig.fernlike.primarily.rind.denim.cake&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;We&amp;#39;ve also dropped the word &amp;quot;passphrase&amp;quot; because… WTF.&lt;/p&gt;

&lt;h3&gt;People make a password, then forget it and lose access to their key.&lt;/h3&gt;

&lt;p&gt;We took some inspiration from Bitcoin wallets here which use an intriguing design pattern.&lt;/p&gt;

&lt;p&gt;After presenting the password, we ask them to put it in their password manager or write it on a piece of paper and keep it on them. We ask them to hit enter once they&amp;#39;ve recorded it.&lt;/p&gt;

&lt;p&gt;Then we clear the screen, and ask for one of the words from the password. If they type in the word correctly, we assume they did write it down.&lt;/p&gt;

&lt;p&gt;If they get it wrong, we give them another chance to write it down before bailing out.&lt;/p&gt;

&lt;p&gt;This isn&amp;#39;t infallible — I suspect people might just paste the password into a text editor and subsequently lose it. But at least they can&amp;#39;t copy-paste the whole password, since they need to give a single word.&lt;/p&gt;

&lt;p&gt;Hopefully with time and testing we&amp;#39;ll figure out how to make this bit as reliable as possible.&lt;/p&gt;

&lt;h3&gt;It&amp;#39;s boring waiting 30s or more for a 4096-bit RSA key to be generated.&lt;/h3&gt;

&lt;p&gt;Having chosen to generate 4096-bit keys, we made the user experience worse by introducing a potentially long delay. (It takes a lot of entropy to securely generate a 4096-bit key, and computers generate entropy quite slowly from sources like mouse movements and hard disk timings).&lt;/p&gt;

&lt;p&gt;The solution&amp;#39;s obvious: do it in the background!&lt;/p&gt;

&lt;p&gt;Fluidkeys asks the person to write down their password and come back when they&amp;#39;re done, so we use that dead-time to generate the key behind the scenes.&lt;/p&gt;

&lt;h3&gt;People don&amp;#39;t back up their PGP key&lt;/h3&gt;

&lt;p&gt;Understandably, because it&amp;#39;s complicated and boring. Most of us never quite get round to making a backup until it&amp;#39;s too late.&lt;/p&gt;

&lt;p&gt;Again, we just do it automatically. Fluidkeys makes a ZIP file with a sensible name and saves it to your &lt;code&gt;~/.fluidkeys/&lt;/code&gt; directory.&lt;/p&gt;

&lt;p&gt;Inside the ZIP file, it looks like this:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;fluidkeys-2018-08-17-paul-paulfurley-com.zip
├── 2018-08-17-paul-paulfurley-com.private-encrypted.txt
├── 2018-08-17-paul-paulfurley-com.public.txt
├── 2018-08-17-paul-paulfurley-com.revoke.txt
└── README.txt
&lt;/code&gt;&lt;/pre&gt;

&lt;h2&gt;Set up Jenkins for continuous deployment&lt;/h2&gt;

&lt;p&gt;We wanted v0.1.0 to be properly &lt;em&gt;releasable&lt;/em&gt;, and that meant packaging it properly from the start. We took some upfront effort to properly package Fluidkeys for macOS and Debian/Ubuntu:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/fluidkeys/fluidkeys#install-on-macos"&gt;Install on macOS with Homebrew&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/fluidkeys/fluidkeys#install-on-debian--ubuntu"&gt;Install on Debian/Ubuntu with apt&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;We&amp;#39;re signing commits and releases&lt;/h3&gt;

&lt;p&gt;To set an example, we&amp;#39;re signing (almost) all our commits on Github, and we&amp;#39;re strictly signing releases as version tags&lt;/p&gt;

&lt;p&gt;When Jenkins prepares to build a new DEB package and Homebrew formula, it gets the most recent tag and check that it&amp;#39;s properly signed by me or Ian, and blows up if not.&lt;/p&gt;

&lt;p&gt;Finally, Jenkins has its own automatic signing key which it uses to sign the apt repo.&lt;/p&gt;

&lt;p&gt;It&amp;#39;s not infallible, but it protects against attacks on Github accounts like the one recently suffered by &lt;a href="https://gentoo.org/news/2018/06/28/Github-gentoo-org-hacked.html"&gt;Gentoo&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;We&amp;#39;d appreciate your feedback&lt;/h2&gt;

&lt;p&gt;Fluidkeys v0.1.0 is &lt;em&gt;furiously minimal&lt;/em&gt;, but we&amp;#39;d really appreciate your thoughts on what we&amp;#39;ve built so far.&lt;/p&gt;

&lt;p&gt;If you&amp;#39;d like to test drive it, head over to &lt;a href="https://github.com/fluidkeys/fluidkeys"&gt;Github&lt;/a&gt; and follow the install instructions there.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;All&lt;/em&gt; feedback is welcome, pop us an email to &lt;a href="mailto:paul@paulfurley.com"&gt;paul@paulfurley.com&lt;/a&gt; and &lt;a href="mailto:idrysdale@gmail.com"&gt;idrysdale@gmail.com&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;— Paul&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Week 1, Researching privacy and security</title>
    <link rel="alternate" href="https://www.fluidkeys.com/weeknotes/week-1/"/>
    <id>https://www.fluidkeys.com/weeknotes/week-1/</id>
    <published>2018-08-10T00:00:00+00:00</published>
    <updated>2018-10-30T14:40:16+00:00</updated>
    <author>
      <name>Ian Drysdale</name>
    </author>
    <content type="html">&lt;h2&gt;Flashback 🔮&lt;/h2&gt;

&lt;p&gt;This time last year, Paul built &lt;a href="https://www.expirybot.com/"&gt;a bot that emails you a reminder if you’re PGP key is about to expire&lt;/a&gt;. To date it’s sent out around 125,000 emails, received (&lt;a href="https://twitter.com/search?q=expirybot&amp;amp;src=typd"&gt;plenty of praise&lt;/a&gt;) and raised enough in donations to cover its server costs.&lt;/p&gt;

&lt;p&gt;Since then we’ve quit our day jobs in the pursuit of building digital products that give you back control of your online information (read: life). &lt;strong&gt;Privacy is a basic human right&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;We’ve had a few weeks of working on and off at this over the summer, but for the sake of simplicity we’re calling this week 1…&lt;/p&gt;

&lt;h2&gt;This week&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;We’ve summarised what we learnt from interviewing 5 people who use PGP within their teams&lt;/strong&gt;. We wanted to understand why they use PGP, what works and what doesn’t.&lt;/p&gt;

&lt;p&gt;We discovered that these are people who really &lt;em&gt;care&lt;/em&gt; about privacy and security. They’re the crypto champions within their organisations. ✊&lt;/p&gt;

&lt;p&gt;They found explaining what PGP is, why it’s useful and how it works to others excruciating and fraught with challenges. No surprises there!&lt;/p&gt;

&lt;p&gt;They’re adopting tools like &lt;a href="https://www.lastpass.com/enterprise"&gt;LastPass Enterprise&lt;/a&gt; or going all in on &lt;a href="https://tutanota.com/"&gt;Tutanota&lt;/a&gt; for handling internal secrets within the team. There’s no broadly adopted way of sharing secrets with someone from outside the organisation:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Sometimes you still have to send secrets to a client. You end up doing half on email, half by Whatsapp. It’s far from ideal!&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;They were pragmatic about security and generally comfortable with the idea of a desktop app integrating with their keys:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;I want security to get out the way. It has to if we’re to get others behind it&lt;/p&gt;

&lt;p&gt;I’d want it to show me what it’s doing in the background, it’s an extension of my identity. It should ask me my password each time&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;We also showed them &lt;a href="https://www.fluidkeys.com/"&gt;mockup of a homepage for a product&lt;/a&gt; that could help them automate PGP for stronger, simpler security. We’re calling it Fluidkeys.&lt;/p&gt;

&lt;p&gt;From them looking at this, we’ve learnt &lt;strong&gt;we’re good at defining the problems and pain that people face when trying to use PGP within their teams&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Our description of the problem and the feature we’re thinking of offering resonated with everyone we showed them to (that said we’ve kept it broad, offering to do everything!)&lt;/p&gt;

&lt;p&gt;However a video showing how Fluidkeys would analyse a teams’ keys and provide recommendations either confused our interviewees or left them wondering what they should do next. Was this something they then would have to act on, or would the software just fix it? We’re starting to learn that &lt;strong&gt;people want something that takes care of security management for for them&lt;/strong&gt;.&lt;/p&gt;

&lt;h2&gt;Are we building a library or a product?&lt;/h2&gt;

&lt;p&gt;There are numerous applications that implement the OpenPGP standard, but GnuPG is the one we encounter most.&lt;/p&gt;

&lt;p&gt;We’ve realised that GnuPG is confusing because it tries to be both a low level cryptography library, &lt;strong&gt;and&lt;/strong&gt; an end user application. It gives you the power to do a number of different things: signing code or emails (proving you identify) and encrypting emails or files (keeping secrets). It feels like it can’t decide what it’s trying to be.&lt;/p&gt;

&lt;p&gt;In contrast, take Signal, a messaging app that focuses on the single task of enabling you to send encrypted messages to other people. By focusing on this one thing, it can be really good at it. It’s easy to setup and to use.&lt;/p&gt;

&lt;p&gt;That said, GnuPG has much wider application and as a standard has  become integrated into a number of other products or services. For example, it’s used on Github to enable code signing and there are clients for all the popular email clients.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;We believe what GnuPG is missing is a decent user interface and an opinionated set of principles for how it should be used within a team.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Our first move is to build Fluidkeys, a wrapper for GnuPG. Our aim is to get a first release out in the next two weeks which will make it a doddle for you to:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Generate a key pair&lt;/li&gt;
&lt;li&gt;Make and remember a great passphrase&lt;/li&gt;
&lt;li&gt;Backup of these keys and create a revocation certificate&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;We’ll then get it into the hands of some developers and see what they make of it.&lt;/p&gt;

&lt;p&gt;If it sounds like something you’re interesting in trying out and your on a Mac or Linux machine, &lt;a href="mailto:idrysdale@gmail.com"&gt;we’d love your feedback&lt;/a&gt;!&lt;/p&gt;

&lt;p&gt;— Ian&lt;/p&gt;
</content>
  </entry>
</feed>
